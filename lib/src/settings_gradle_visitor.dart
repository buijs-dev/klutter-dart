// Copyright (c) 2021 - 2022 Buijs Software
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

import 'dart:io';

import 'package:klutter/src/const.dart';

import 'extensions.dart';
import 'klutter_exception.dart';

/// Add apply plugin line to android/settings.gradle file.
///
/// [Author] Gillian Buijs.
void applyPluginLoader(String pathToAndroid) =>
    pathToAndroid.verifyExists.toGradleFile.append;

extension on String {
  /// Create a path to the root-project/android/settings.gradle file.
  /// If the file does not exist throw a [KlutterException].
  File get toGradleFile =>
      File("${this}${Platform.pathSeparator}settings.gradle")
        ..ifNotExists((_) => throw KlutterException(
            "Missing settings.gradle file in directory: ${this}"));
}

extension on File {
  /// Add the following line to the settings.gradle file if not present:
  /// ```
  ///   apply from: "$flutterSdkPath/packages/flutter_tools/gradle/klutter_plugin_loader.gradle.kts"
  /// ```
  ///
  /// The flutterSdkPath variable is based of line generated by Flutter:
  /// ```
  /// apply from: "$flutterSdkPath/packages/flutter_tools/gradle/app_plugin_loader.gradle"
  /// ```
  ///
  ///
  /// For example given this line in the settings.gradle file:
  /// ```
  /// apply from: "$someothervar/app_plugin_loader.gradle"
  /// ```
  ///
  /// Then this line will be added:
  /// ```
  /// apply from: "$someothervar/klutter_plugin_loader.gradle"
  /// ```
  void get append {
    // Do nothing if the plugin is already applied.
    if (readAsStringSync().contains(klutterPluginLoaderGradleFile)) {
      return;
    }

    // Will be set to true if a line containing
    // 'app_plugin_loader.gradle' and keyword 'apply' is found.
    var hasLoader = false;

    final lines = readAsLinesSync().map((line) {
      final hasPluginLoader =
          line.contains("apply") && line.contains("app_plugin_loader.gradle");

      if (hasPluginLoader) {
        hasLoader = true;
        return "$line\n${line.replaceAll('app_plugin_loader.gradle', klutterPluginLoaderGradleFile)}";
      } else {
        return line;
      }
    }).toList();

    if (!hasLoader) {
      // If the klutter_plugin_loader.gradle.kts is not applied
      // then throw exception because
      // no plugin made with Klutter will work without it.
      throw KlutterException(
        '''Failed to apply Klutter plugin loader.
             Check if the root/android/settings.gradle file contains the following line:
             'apply from: "\$flutterSdkPath/packages/flutter_tools/gradle/app_plugin_loader.gradle"'
             
             Either add the line and retry or manually add the following line:
             'apply from: "\$flutterSdkPath/packages/flutter_tools/gradle/$klutterPluginLoaderGradleFile"'
          ''',
      );
    }

    writeAsStringSync(lines.join("\n"), mode: FileMode.write);
  }
}
